{% from "nostack/postgres/map.jinja" import postgres with context %}

# environments
data_directory = '{{ postgres.postgres_data }}'
hba_file = '{{ postgres.postgres_data }}/pg_hba.conf'
ident_file = '{{ postgres.postgres_data }}/pg_ident.conf'
external_pid_file = '/var/run/postgresql/{{ postgres.major_version }}-nostack.pid'
unix_socket_directories = '/var/run/postgresql'

# networks
listen_addresses = '{{ salt['pillar.get']('postgres:listen', '127.0.0.1') }}'
port = {{ salt['pillar.get']('postgres:port', '5432') }}
max_connections = {{ salt['pillar.get']('postgres:max_connections', '100') }}

# memories
shared_buffers = {{ salt['pillar.get']('postgres:port', '24MB') }}
effective_cache_size = {{ salt['pillar.get']('postgres:port', '128MB') }}

# logs
log_destination = 'stderr'
log_line_prefix = '%t '
log_duration = on
log_min_duration_statement = {{ salt['pillar.get']('postgres:log_min_duration_statement', '100') }}

# locales
datestyle = 'iso, ymd'
lc_messages = 'en_US.UTF-8'
lc_monetary = 'en_US.UTF-8'
lc_numeric = 'en_US.UTF-8'
lc_time = 'en_US.UTF-8'
default_text_search_config = 'pg_catalog.english'

# xlog archive
{% if salt['pillar.get']('postgres:omnipitr_mode', 'off') == 'on' -%}
archive_mode = 'on'
archive_command = '{{ postgres.omnipitr_bin }}/omnipitr-archive -D {{ postgres.postgres_data }} -l {{ postgres.omnipitr_log }}/omnipitr-^Y^m^d.log -s {{ postgres.omnipitr_state }} -t {{ postgres.omnipitr_tmp }} -db {{ postgres.omnipitr_db }} {% for remote in salt['pillar.get']('postgres:omnipitr:remotes') %} -dr {{ remote }} {% endfor %} -v "%p"'
archive_timeout = {{ salt['pillar.get']('postgres:archive_timeout', '0') }}
{% else -%}
archive_mode = 'off'
archive_command = ''
archive_timeout = 0
{% endif -%}

# wal hot_standby
{% if salt['pillar.get']('postgres:wal_level', '') == 'hot_standby' %}
hot_standby = on
wal_level = 'hot_standby'
wal_keep_segments = 150
max_wal_senders = 5
{% endif %}
